package remote;

enum Command {
	NONE        = 0; // must not be used
	CLOSE       = 1; // unused
	DATA        = 2;
	SCAN        = 3;
	SCANOPTS    = 4; // scan options (before scan)
	SCANPROG    = 5; // scan progress (during scan)

	MKDIR       = 10;
	REMOVE      = 11;
	COPY_SRC    = 12;
	COPY_DST    = 13;
	CREATELINK  = 14; // create symlink
	UPDATELINK  = 15; // update symlink
	READLINK    = 16; // remove symlink
	CHMOD       = 17; // change permissions
	RSYNC_SRC   = 18; // librsync protocol (sender, reader)
	RSYNC_DST   = 19; // librsync protocol (receiver, writer)

	// testing commands
	PUTFILE     = 30;
	INFO        = 31;

	// get and set status (to be removed)
	GETFILE     = 40;
	SETFILE     = 41;
}

// See TYPE_* constants in tree/tree.go
enum FileType {
	UNKNOWN   = 0; // must not be used
	REGULAR   = 1;
	DIRECTORY = 2;
	SYMLINK   = 3;
	NOTFOUND  = 4; // TODO
}

enum DataStatus {
	NORMAL = 0; // still sending/receiving (optional)
	FINISH = 1; // last block
	CANCEL = 2; // there is an error
}

enum ErrorType {
	ERR_OTHER      = 0;
	ERR_NOTFOUND   = 1;
	ERR_FOUND      = 2;
	ERR_CHANGED    = 3;
	ERR_NO_DIR     = 10;
	ERR_NO_REGULAR = 11;
	ERR_NO_SYMLINK = 12;
}

message FileInfo {
	repeated string   path      = 1;
	optional FileType type      = 2;
	optional uint32   mode      = 3;
	optional uint32   hasMode   = 4;
	optional sint64   modTime   = 5;
	optional sint64   size      = 6;
	optional uint32   hashType  = 7;
	optional bytes    hashData  = 8;
}

message ScanOptions {
	repeated string exclude = 1;
	repeated string include = 2;
	repeated string follow  = 3;
	optional uint32 perms   = 5;
	optional string replica = 6;
}

message ScanProgress {
	optional uint64 total = 1;
	optional uint64 done  = 2;
	repeated string path  = 3;
}

message Error {
	optional ErrorType type    = 1;
	optional string    message = 2;
}

message Request {
	optional Command    command    = 1; // required
	optional uint64     requestId  = 2; // required
	optional FileInfo   fileInfo1  = 3; // meaning depends on command
	optional FileInfo   fileInfo2  = 4; // meaning depends on command
	optional string     name       = 5;
	optional bytes      data       = 6;
	optional DataStatus status     = 7;
}

message Response {
	optional Command  command    = 1; // optional, DATA if set
	optional uint64   requestId  = 2; // required
	optional Error    error      = 3; // set on errors
	optional FileInfo fileInfo   = 4;
	optional FileInfo parentInfo = 5;
	optional bytes    data       = 6;
}
